# -*- coding: utf-8 -*-
"""
Created on Wed Dec 20 21:38:39 2023

@author: 20705251
"""

import numpy as np
import matplotlib.pyplot as plt

# Constants
K = 0.03 # Solar wind strength
D = 1/32 
N = 9000 

# Initial conditions
r1 = 1
r2 = 0
v1 = 0
v2 = 1
t = 0

# Lists to store position data for plotting
r1_list = [r1]
r2_list = [r2]

v1_list = [v1]
v2_list = [v2]


# Initial velocity half-step
r8 = r1**2 + r2**2
r = np.sqrt(r8)
r9 = r * r8
d1 = r8 * D
v1 = v1 + (K - r1/r9) * d1/2
v2 = v2 - r2/r9 * d1/2

# Iterative loop
for i in range(1, N):
    # Half-step estimate
    r5 = r1 + v1 * d1/2
    r6 = r2 + v2 * d1/2
    r8 = r5**2 + r6**2
    
    # Full-step calculation
    d1 = r8 * D
    r1 = r1 + v1 * d1
    r2 = r2 + v2 * d1
    
    # Store the new positions for plotting
    r1_list.append(r1)
    r2_list.append(r2)
    
    # Full-step calculation of the velocities
    r8 = r1**2 + r2**2
    r = np.sqrt(r8)
    v1 = v1 + (K * r8 - r1/r) * D
    v2 = v2 - r2/r * D
    
    v1_list.append(v1)
    v2_list.append(v2)
    
    # increase time
    t = t + D



t = np.linspace(0, N, N) #time array in case it needs to be plotted to compare 
#different physical quantities 


# Plotting r1 vs r2
plt.plot(r1_list, r2_list)
plt.xlabel('r1')
plt.ylabel('r2')
plt.title('Orbital Path (r1 vs r2)')

#plt.xlabel('v1')
#plt.ylabel('v2')
#plt.title('Velocity Plot (v1 vs v2)')


plt.grid()
plt.show()
